!function(){"use strict";var e={243:function(e,t,r){e.exports=r.p+"d3edfb3fe0284e46cb86.jpg"},769:function(e,t,r){e.exports=r.p+"05f1a4a8dccb609a7ff3.jpg"},199:function(e,t,r){e.exports=r.p+"4317d98e0be2323014f4.jpg"},408:function(e,t,r){e.exports=r.p+"c699805af844af80a2db.jpg"},462:function(e,t,r){e.exports=r.p+"0bbb8e918e3becd29120.jpg"},329:function(e,t,r){e.exports=r.p+"205114d203f083e3e22b.jpg"}},t={};function r(s){var n=t[s];if(void 0!==n)return n.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,r),o.exports}r.p="",function(){class e{constructor(e,t){this._config=e,this._formElement=t}enableValidation(){this.setEventListeners()}setEventListeners(){this._inputs=this._formElement.querySelectorAll(this._config.inputSelector),this._submitBtn=this._formElement.querySelector(this._config.submitButtonSelector),this._inputs.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e,this._formElement),this._updateSubmitButton()}))}))}_updateSubmitButton(){const e=this._checkFieldsValidity(this._inputs);this._setSubmitButtonState(e)}_setSubmitButtonState(e){this._submitBtn.disabled=e}_checkFieldsValidity(){return Array.from(this._inputs).some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?(this._removeErrorStyles(e),this._hideErrorMessage(e)):(this._addErrorStyles(e),this._showErrorMessage(e))}_removeErrorStyles(e){e.classList.remove(this._config.inputHasError)}_hideErrorMessage(e){this._formElement.querySelector(".".concat(e.id,"-error")).classList.remove(this._config.errorTextVisible)}_addErrorStyles(e){e.classList.add(this._config.inputHasError)}_showErrorMessage(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._config.errorTextVisible)}resetValidation(){this._updateSubmitButton(),this._inputs.forEach((e=>{this._hideErrorMessage(e),this._removeErrorStyles(e)}))}}class t{constructor(e,t){let{data:r,handleCardClick:s,handleTrashClick:n}=e;this._template=document.querySelector("#".concat(t)),this._data=r,this._handleCardClick=s,this._handleTrashClick=n}createCard(){this._card=this._template.content.cloneNode(!0).querySelector(".element");const e=this._card.querySelector(".element__title"),t=this._card.querySelector(".element__image");return t.src=this._data.url,t.alt=this._data.title,e.textContent=this._data.title,this._setEventListeners(),this._card}_updateLikeCount(){this._card.querySelector(".like-button__counter").textContent=this._liked.length}_setEventListeners(){this._card.querySelector(".element__image").addEventListener("click",(e=>{this._handleCardClick(e)})),this._card.querySelector("#delete-card-button").addEventListener("click",(()=>{this._handleTrashClick()})),this._card.querySelector(".like-button").addEventListener("click",(()=>{this._toggleLike()}))}_toggleLike(){this._card.querySelector(".like-button").classList.add("like-button_active"),this._updateLikeCount()}}class s{constructor(e){this._popupElement=document.querySelector("#".concat(e)),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("popup-form_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup-form_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("close-button"))&&this.close()}))}}class n extends s{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super(t),this._form=this._popupElement.querySelector(".popup-form__input-container"),this._formInputs=this._popupElement.querySelectorAll(".popup-form__input"),this._handleFormSubmit=r}_getInputValues(){return this._formValues={},this._formInputs.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}resetForm(){this._form.reset()}}const o=[{title:"Palm Springs Aerial Tramway",url:r(199)},{title:"Cedar Point, OH",url:r(769)},{title:"N.A. Pow Wows",url:r(462)},{title:"Colonial Williamsburg",url:r(243)},{title:"Old San Juan, Puerto Rico",url:r(408)},{title:"Disney World",url:r(329)}],i={formSelector:".popup-form__input-container",inputSelector:".popup-form__input",submitButtonSelector:".submit-button",inactiveButtonClass:"popup-form__submit-button_type_disabled",errorTextSelector:".popup-form__error-text",inputHasError:"popup-form__input_has_error",errorTextVisible:"popup-form__error-text_visible"},a=document.querySelector("#edit-button"),l=document.querySelector(".add-button"),c=document.querySelector("#profile-pic-button"),d=document.querySelector("#name"),u=document.querySelector("#description"),p=document.querySelector("#profile-pic"),h=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_handleServerResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}getUserInfo(){fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._handleServerResponse)}setUserInfo(e){let{name:t,description:r}=e;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,description:r})}).then(this._handleServerResponse)}updateProfilePicture(e){let{avatar:t}=e;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleServerResponse)}getInitialCardList(e){let{title:t,url:r}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",body:JSON.stringify({title:t,url:r})}).then(this._handleServerResponse)}addCard(e){let{title:t,url:r}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({title:t,url:r})}).then(this._handleServerResponse)}removeCard(e){let{_id:t}=e;return fetch("".concat(this._baseUrl,"/cards/cardId"),{method:"DELETE",headers:this._headers,body:JSON.stringify({_id:t}).then(this._handleServerResponse)})}toggleLikeCardStatus(e,t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:t?"PUT":"DELETE",headers:this._headers}).then(this._handleServerResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"9b991f86-368d-4ef3-963c-b91580821c46"}}),m=new class extends s{open(e){let{url:t,title:r}=e;this._popupElement.querySelector(".popup-form__caption").textContent=r,this._imgElement=this._popupElement.querySelector(".popup-form__image"),this._imgElement.src=t,this._imgElement.alt=r,super.open()}}("image-popup"),_=e=>new t({data:e,handleCardClick:()=>{m.open(e)},handleTrashClick:()=>{v.open()}},"card-template").createCard(),f=new class{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(".".concat(t))}renderItem(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:o,renderer:e=>{h.getInitialCardList({title:e.title,url:e.url}).then((e=>{f.addItem(_(e))})).catch((e=>console.log("An error occurred adding the initial cards: ".concat(e))))}},"elements"),S=new class{constructor(e){let{nameSelector:t,descriptionSelector:r}=e;this._nameElement=document.querySelector(".".concat(t)),this._descriptionElement=document.querySelector(".".concat(r))}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e){let{name:t,description:r}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=r}}({nameSelector:"profile__name",descriptionSelector:"profile__description"}),E=new n({popupSelector:"edit-popup-form",handleFormSubmit:e=>{h.setUserInfo({name:e.name,description:e.description}).then((e=>{S.setUserInfo({name:e.name,description:e.description}),E.close()})).catch((e=>console.log("An error occurred updating user information: ".concat(e)))).finally((()=>{}))}}),b=new n({popupSelector:"create-popup-form",handleFormSubmit:e=>{h.addCard(e).then((e=>{f.addItem(_(e)),b.resetForm()})).catch((e=>console.log("An error had occurred while adding your card :( : ".concat(e)))).finally((()=>{}))}}),v=new class extends s{constructor(e){let{popupSelector:t}=e;super(t)}setEventListeners(){super.setEventListeners(),document.querySelector("#confirmation-button").addEventListener("click",(()=>{this.deleteCard(),this.close()}))}deleteCard(){document.querySelector(".element").remove()}}({popupSelector:"delete-confirmation-popup"}),y=new n({popupSelector:"profile-picture-popup",handleFormSubmit:()=>{document.querySelector(".profile__image").src=p.value,y.resetForm()}}),g=new e(i,document.querySelector("#edit-popup-form"));g.enableValidation();const L=new e(i,document.querySelector("#create-popup-form"));L.enableValidation();const C=new e(i,document.querySelector("#profile-picture-popup"));C.enableValidation(),a.addEventListener("click",(()=>{E.open();const{name:e,description:t}=S.getUserInfo();d.value=e,u.value=t,g.resetValidation()})),l.addEventListener("click",(()=>{b.resetForm(),L.resetValidation(),b.open()})),c.addEventListener("click",(()=>{C.resetValidation(),y.open()})),f.renderItem(o),m.setEventListeners(),E.setEventListeners(),b.setEventListeners(),v.setEventListeners(),y.setEventListeners()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,